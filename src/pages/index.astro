---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Create And Find new Korvais!">
	<main class="pt-[64px] px-8 mx-auto max-w-3xl text-zinc-800">
		<h1 class="text-3xl text-center">Welcome to korvais</h1>
    <p class="text-xl pt-12 pb-4">Enter the values:</p>

    <form id="talamForm" class="flex flex-col">
      <div id="basicInputs">
        <label for="talamCount" class="pt-2 pb-2">Talam Count:</label>
        <input type="number" id="talamCount" name="talamCount" required class="block w-full text-center rounded-md border-0 py-1.5 text-zinc-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
        <label for="purvangam" class="pt-2 pb-2">Purvangam:</label>
        <input type="number" id="purvangam" name="purvangam" required class="block w-full text-center rounded-md border-0 py-1.5 text-zinc-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
      </div>

      <div id="advancedInputs" class="hidden">
        <label for="baseCount">Base Count:</label>
        <input type="number" id="baseCount" name="baseCount" class="block w-full text-center rounded-md border-0 py-1.5 text-zinc-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
        <label for="afterBeatCount">After Beat Count:</label>
        <input type="number" id="afterBeatCount" name="afterBeatCount" class="block w-full text-center rounded-md border-0 py-1.5 text-zinc-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
      </div>

      <label for="mode" class="pt-2 pb-2">Mode:</label>
      <select id="mode" name="mode" class="block w-full text-center rounded-md border-0 py-1.5 text-zinc-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
        <option value="normal" class="text-gray-700 block px-4 py-2 text-sm">Normal</option>
        <option value="advanced" class="text-gray-700 block px-4 py-2 text-sm">Advanced</option>
      </select>

      <section class="flex flex-col gap-4 pt-6">
      <button
        type="button"
        class="rounded bg-indigo-200 px-2 py-1 text-sm font-semibold text-indigo-600 shadow-sm hover:bg-indigo-300 pt-1.5 pb-1.5"
        onclick="calculateTalam()"
      >
        Calculate
      </button>

      <button
        type="button"
        class="rounded bg-red-200 px-2 py-1 text-sm font-semibold text-red-150 shadow-sm hover:bg-red-300 pt-1.5 pb-1.5"
        onclick="resetOutput()">
        Reset
      </button>

    </section>
    </form>
		<div id="output" class="flex flex-col gap-2 pt-4 text-center pb-8">
      <!-- findnumbers -->
    </div>
    <div id="formula1" class="flex flex-col gap-2 pt-4 text-center pb-8"></div>

	</main>
</Layout>

<script is:inline>

function adjustToNearestDivisibleBy3(value) {
  return value % 3 === 0 ?  value : value + (3 - value % 3);
}

function findNumbers(talamCount, purvangam) {
  purvangam = adjustToNearestDivisibleBy3(purvangam);
  var uttarangam = talamCount - purvangam;
  var output = "Talam: " + talamCount + ", Purvangam: " + purvangam + ", Uttarangam: " + uttarangam + "<br>";

  output += "<b>Part A: PURVANGAM</b>";
  for (var y = 0; y <= 10; y++) {
    var x = (purvangam - 3 * y) / 3;
    if (Number.isInteger(x) && x >= 0) {
      output += "X = " + x + ", Y = " + y + "<br>";
    }
  }

  output += "<b>Part B: UTTRANGAM</b>";
  for (var y = 0; y <= 10; y++) {
    var x = (uttarangam - 2 * y) / 3;
    if (Number.isInteger(x) && x >= 0) {
      output += "X = " + x + ", Y = " + y + "<br>";
    }
  }

  document.getElementById("output").innerHTML = output;
}

function calculateTalam() {
  var talamCount = parseInt(document.getElementById("talamCount").value);
  var purvangam = parseInt(document.getElementById("purvangam").value);
  var mode = document.getElementById("mode").value;

  //check if the talamcount and or purvangam are defined
  if (isNaN(talamCount) || isNaN(purvangam)) {
    output = "Please enter valid numbers";
    document.getElementById("output").innerHTML = output;
    return;
  }

  if (mode === "advanced") {
    var baseCount = parseInt(document.getElementById("baseCount").value);
    var afterBeatCount = parseInt(document.getElementById("afterBeatCount").value);
    var options = findTalamCount(baseCount, afterBeatCount);
    var output = "Possible talam counts:" + "<br>";
    options.forEach(function(option) {
      var talamCount = option[0];
      var X = option[1];
      output += "Talam count: " + talamCount + ", X avartana / round: " + X + ", Total beats: " + (talamCount * 3) + ", Total with beats: " + (talamCount * 3 + afterBeatCount) + "<br>";
    });
    document.getElementById("output").innerHTML = output;
  } else {
    findNumbers(talamCount, purvangam);
    formula1(talamCount);
  }
}

function findTalamCount(baseCount, afterBeatCount) {
  var options = [];
  for (var X = 1; X <= 10; X++) {
    var totalBeats = 3 * baseCount * X + afterBeatCount;
    if (totalBeats % 3 === 0) {
      var talamCount = baseCount * X;
      options.push([talamCount, X]);
    }
  }
  return options;
}

function resetOutput() {
  document.getElementById("output").innerHTML = "";
}

function findDicotomous(baseCount) {
  var options = [];
  for (let power = 0; Math.pow(2, power) <= baseCount; power++) {
    let currentPower = Math.pow(2, power);
    if (baseCount % currentPower === 0 && currentPower > 4) {
      options.push(currentPower);
    }
  }
  return options;
}

function formula1(baseCount) {
  const container = document.createElement("div");
  const h1 = document.createElement("h1");
  h1.innerText = "Formula 1";
  container.appendChild(h1);

  if ((baseCount - 4) <= 0 || findDicotomous(baseCount).length === 0) {
    const p = document.createElement("b");
    p.innerText = "No Solution Found";
    container.appendChild(p);
  } else {
    baseCount = findDicotomous(baseCount)[0];
  
    const title = document.createElement("b");
    title.innerText = "Part A: PURVANGAM";
    container.appendChild(title);
  
    for (let y = 0; y <= 4; y++) {
      const xValue = document.createElement("p");
      xValue.innerText = "X = " + (baseCount - y) + " 2";
      container.appendChild(xValue);
    }
  
    const titlePartB = document.createElement("b");
    titlePartB.innerText = "Part B: UTTRANGAM";
    container.appendChild(titlePartB);
  
    for (let y = 0; y <= 2; y++) {
      const yValue = document.createElement("p");
      yValue.innerText = "X = " + baseCount;
      container.appendChild(yValue);
    }
  }

  const formula1Element = document.getElementById("formula1");
  formula1Element.innerHTML = "";
  formula1Element.appendChild(container);
}


document.getElementById("mode").addEventListener("change", function() {
  const basicInputs = document.getElementById('basicInputs');
  const advancedInputs = document.getElementById("advancedInputs");
  if (this.value === "advanced") {
    advancedInputs.classList.toggle('hidden');
    basicInputs.classList.toggle('hidden');

  } else {
    advancedInputs.classList.toggle('hidden');
    basicInputs.classList.toggle('hidden');
  }
});
</script>
